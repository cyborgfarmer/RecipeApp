/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dmsimplegui;
import java.awt.Color;
import java.awt.FlowLayout;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
/**
 *
 * @author dm360
 */
public class DmSimplePanel2 extends javax.swing.JPanel {

    /**
     * Creates new form DmSimplePanel
     */
    public DmSimplePanel2() {
        initComponents();
        
        //to add elements to the list
        updateIngredients();
        
        updateRecipes();
        
        listPanel.setLayout(new FlowLayout());
               
    }
    
    //get the data from the main class, and update panel
    public void updateIngredients(){
        DefaultListModel model = (DefaultListModel) jList1.getModel();
        
        //remove anything that might be already there
        model.removeAllElements();
        
        //go through each ingredient and add it to the list (model)
        for(int i = 0; i < Restaurant.allIngredients.size(); i++){
            Ingredient ing = Restaurant.allIngredients.get(i); //get the i-th ingredient
        
            model.addElement(ing); //add it to the list
        }     
    }
    
    public Ingredient getSelectedIngredient(){
        return (Ingredient) jList1.getSelectedValue();
    }
    
    public Recipe getSelectedRecipe(){
        return (Recipe) jList2.getSelectedValue();
    }
    
    //get the data from the main class, and update panel
    public void updateRecipes(){
        DefaultListModel model = (DefaultListModel) jList2.getModel();
        
        //remove anything that might be already there
        model.removeAllElements();
        
        //go through every ingredient and add it to the list (model)
        for(int i = 0; i < Restaurant.allRecipes.size(); i++){
            Recipe rec = Restaurant.allRecipes.get(i); //get the i-th ingredient

            model.addElement(rec); //add it to the list
        }    
    }
    
    void setSelectedRecipe(Recipe rec) {
        jList2.setSelectedValue(rec, true);
    }
    
    //this will be called from the ingredients panel (outside of this panel)
    public void updateAddFields(IngredientsList ing){        
       
    }
    
    public IngredientsList getSelectedIngForRec(){
        return (IngredientsList) jList1.getSelectedValue();
    }
   
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        unitField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        modifyButton1 = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        addToRecipeButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        newRecipeButton1 = new javax.swing.JButton();
        recipeNameTextField = new javax.swing.JTextField();
        deleteRecipeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jToggleButton1.setText("jToggleButton1");

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        setDoubleBuffered(false);
        setPreferredSize(new java.awt.Dimension(820, 740));
        setSize(new java.awt.Dimension(820, 740));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(105, 14, 37));
        jLabel1.setText("Derrick's Fine Dining");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 8)); // NOI18N
        jLabel3.setText("Last Updated On: 4/24/2018");

        jButton2.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jButton2.setText("Check for updates");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Add, modify, or delete an ingredient:"));

        jList1.setModel(new DefaultListModel());
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel5.setText("Unit:");

        jLabel6.setText("Price:");

        jLabel4.setText("Name:");

        addButton.setText("Add New");
        addButton.setToolTipText("Adds ingredient to the listbox to the right");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        modifyButton1.setText("Modify Selected");
        modifyButton1.setToolTipText("Allows user to update name, price, or unit");
        modifyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButton1ActionPerformed(evt);
            }
        });

        removeButton.setText("Remove Selected");
        removeButton.setToolTipText("Removes the ingredient selected in the list to the right");
        removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeButtonMouseClicked(evt);
            }
        });
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        addToRecipeButton.setText("<<<   Add To Recipe");
        addToRecipeButton.setToolTipText("Adds selected ingredient to selected recipe");
        addToRecipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToRecipeButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Quantity:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unitField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(priceField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameField)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(modifyButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityField)
                            .addComponent(addToRecipeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel4)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(1, 1, 1)
                        .addComponent(unitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(modifyButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addComponent(jLabel10)
                        .addGap(1, 1, 1)
                        .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addToRecipeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(73, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("View, Add, Modify, or Delete Recipe:"));

        jList2.setModel(new DefaultListModel());
        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel7.setText("Select a recipe in the Recipe Ingredients panel to");

        jLabel8.setText("view its contents. To add ingredients to a recipe,");

        jLabel9.setText("be sure to select both a recipe and an ingredient.");

        newRecipeButton1.setText("Add New Recipe");
        newRecipeButton1.setToolTipText("Adds the recipe name to the list below");
        newRecipeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRecipeButton1ActionPerformed(evt);
            }
        });

        deleteRecipeButton.setText("Delete Recipe");
        deleteRecipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecipeButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setHorizontalScrollBar(null);

        listPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Recipe Ingredients:"));
        listPanel.setMaximumSize(new java.awt.Dimension(500, 32767));
        listPanel.setPreferredSize(new java.awt.Dimension(500, 1500));

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1476, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(listPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(recipeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newRecipeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(deleteRecipeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newRecipeButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteRecipeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Application is up to date.");        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //try to convert the price to a number
        double price;
        
        try{
            price = Double.parseDouble(priceField.getText());
            //if the code got to this point, the number was successfully converted
            //..so change the textfield back to white
            priceField.setBackground(Color.white);
          
        }
        catch(Exception e){
            //highlight the price field
            priceField.setBackground(Color.pink);
            return;
        }
        
        String name;
        name = nameField.getText();
        
        String unit;
        unit = unitField.getText();
        
        //create a new ingredient object
        Ingredient ing = new Ingredient();
        
        //populate the fields of the ingredient
        ing.setName(name);
        ing.setPrice(price);
        ing.setUnitOfMeasurement(unit);
        
        //add it to the repository in Main class
        Restaurant.allIngredients.add(ing);
        
        //update the interface
        updateIngredients();
        
        nameField.setText(null);
        unitField.setText(null);
        priceField.setText(null);
        
        nameField.setEnabled(true);
        priceField.setEnabled(true);
        unitField.setEnabled(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int[] selected; //variable to remember which elements are selected
        selected = jList1.getSelectedIndices(); //ask the list for all the indices
        
        //get the model
        DefaultListModel model;
        model = (DefaultListModel) jList1.getModel();
        
        //starting from the end of the selected list
        for(int i = selected.length - 1; i >= 0; i--){
            model.remove(selected[i]);
            // remove from the repository in Main class
            Restaurant.allIngredients.remove(selected[i]);
        }
        
        nameField.setEnabled(true);
        priceField.setEnabled(true);
        unitField.setEnabled(true);
                
    }//GEN-LAST:event_removeButtonActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        Ingredient selected;
        selected = (Ingredient) jList1.getSelectedValue();
        
        if(selected == null){ // if nothing is selected...
            nameField.setText("");
            priceField.setText("");
            unitField.setText("");
            
            modifyButton1.setEnabled(false);
            nameField.setEnabled(false);
            priceField.setEnabled(false);
            unitField.setEnabled(false);
            
        } else { // if some ingredient is selected...
            
            nameField.setText(selected.getName());
            priceField.setText(selected.getPrice() + "");
            unitField.setText(selected.getUnitOfMeasurement());
            
            // same idea in longer form:
            // price = selected.getPrice() + "";
            // priceField.setText(price);
                        
            modifyButton1.setEnabled(true);
            nameField.setEnabled(true);
            priceField.setEnabled(true);
            unitField.setEnabled(true);
        }
        
        //also need to change the color of all the textfields
        priceField.setBackground(Color.white); 
    }//GEN-LAST:event_jList1ValueChanged

    private void modifyButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButton1ActionPerformed
        Ingredient selected;
        selected = (Ingredient) jList1.getSelectedValue();
        
        double price;
        
        try{
            price = Double.parseDouble(priceField.getText());
            //if the code got to this point, the number was successfully converted
            //..so change the textfield back to white
            priceField.setBackground(Color.white);
          
        }
        catch(Exception e){
            //highlight the price field
            priceField.setBackground(Color.pink);
            return;
        }
        
        // if nothing is selected...
        if(selected == null){ 
            nameField.setText("");
            priceField.setText("");
            unitField.setText("");
            
            modifyButton1.setEnabled(false);
            nameField.setEnabled(false);
            priceField.setEnabled(false);
            unitField.setEnabled(false);
            
        } else { // if some ingredient is selected...
            
            String name;
            name = nameField.getText();
        
            String unit;
            unit = unitField.getText();
            
            //populate the fields of the ingredient
            selected.setName(name);
            selected.setPrice(price);
            selected.setUnitOfMeasurement(unit);
            
            // same idea in longer form:
            // price = selected.getPrice() + "";
            // priceField.setText(price);
            
            //update the interface
            updateIngredients();

            nameField.setText(null);
            unitField.setText(null);
            priceField.setText(null);
            
            modifyButton1.setEnabled(true);
            nameField.setEnabled(true);
            priceField.setEnabled(true);
            unitField.setEnabled(true);
        }
        
        //also need to change the color of all the textfields
        priceField.setBackground(Color.white); 
    }//GEN-LAST:event_modifyButton1ActionPerformed

    private void addToRecipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToRecipeButtonActionPerformed
        Ingredient ing = (Ingredient) jList1.getSelectedValue();
        Recipe rec = (Recipe) jList2.getSelectedValue(); 
        
        // also need double howMuch for addIngredient();
        String quantity = quantityField.getText();
        double howMuch = Double.parseDouble(quantity);
        
        // then figure out how to add ing and howMuch to recipe        
        rec.addIngredient(ing, howMuch);
        updateRecipes();
        
        Restaurant.recPanel.setSelectedRecipe(rec);

        
        // setIngredient(ing);
        
        // then create the SingleIngredient panel in the "Recipe Ingredients"
        // portion of the Recipe Panel.
        
//        price = rec.computeCost();
//        
//        SingleIngredient.setText(selected.toString());
//        
//        selected.setIngredient(selected.toString());
        
        
    }//GEN-LAST:event_addToRecipeButtonActionPerformed

    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
        Recipe rec = (Recipe) jList2.getSelectedValue();
        //first clear the container panel
        listPanel.removeAll();
        
        //add a panel for each ingredient of the recipe
        if(rec != null){
            
            int n = rec.getNumberOfIngredients();
            for(int i = 0; i < n; i++){
                
                //create a panel for the i-th ingredient
                SingleIngredient si = new SingleIngredient(); 
                
                Ingredient ing = rec.getIngredient(i);
                si.setIngredient(ing);
                
                double q = rec.getQuantity(i);
                si.setQuantity(q);
                
                //add the panel to the list of panels
                listPanel.add(si); 
                
                //use this when a change is not immediately visible. It forces
                // Swing to re-layout and redraw
                listPanel.revalidate();
            }
        }            
       
        listPanel.repaint();
        
        
    }//GEN-LAST:event_jList2ValueChanged

    private void newRecipeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRecipeButton1ActionPerformed
        Ingredient selected;
        selected = (Ingredient) jList2.getSelectedValue();
        
        String name;
        name = recipeNameTextField.getText();
        
        
        
        //create a new recipe object
        Recipe rec = new Recipe();
        double price = rec.computeCost();
        
        //populate the fields of the recipe
        rec.setName(name);
        
        // rec.setPrice(price);
        
        //add it to the repository in Main class
        Restaurant.allRecipes.add(rec);
        
        updateRecipes();
        
        // Not sure how to disable the button when the text field is empty...
//        if(selected == null) {
//            recipeNameTextField.setText(null);
//            recipeNameTextField.setEnabled(true);
//        } else { // if a recipe is selected...
//            recipeNameTextField.setText("");
//            recipeNameTextField.setEnabled(false);
//        }
        
    }//GEN-LAST:event_newRecipeButton1ActionPerformed

    private void removeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_removeButtonMouseClicked

    private void deleteRecipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecipeButtonActionPerformed
        int[] selected; //variable to remember which elements are selected
        selected = jList2.getSelectedIndices(); //ask the list for all the indices
        
        //get the model
        DefaultListModel model;
        model = (DefaultListModel) jList2.getModel();
        
        //starting from the end of the selected list
        for(int i = selected.length - 1; i >= 0; i--){
            model.remove(selected[i]);
            Restaurant.allRecipes.remove(selected[i]);
        } 
        
        
        
        recipeNameTextField.setEnabled(true);
        
    }//GEN-LAST:event_deleteRecipeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addToRecipeButton;
    private javax.swing.JButton deleteRecipeButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel listPanel;
    private javax.swing.JButton modifyButton1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton newRecipeButton1;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField quantityField;
    private javax.swing.JTextField recipeNameTextField;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField unitField;
    // End of variables declaration//GEN-END:variables
}
